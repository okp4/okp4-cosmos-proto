name: Build

on:
  workflow_call:

  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-kotlin:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Configure gradle.properties
        run: |
          cat <<EOF >> kotlin/gradle.properties
          maven.credentials.username=${{ secrets.MAVEN_REPOSITORY_USERNAME }}
          maven.credentials.password=${{ secrets.MAVEN_REPOSITORY_PASSWORD }}
          EOF

      - name: Build kotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x check
          build-root-directory: kotlin

  build-typescript:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup node environment (for building)
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0

      - name: Fetch dependencies
        run: yarn --cwd ts

      - name: Generate sources
        run: yarn --cwd ts generate

      - name: Build
        run: yarn --cwd ts build

  build-python:
    runs-on: ubuntu-20.04
    env:
      WORK_DIR: ./python
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.11

      - name: Install project dependencies
        working-directory: ${{env.WORK_DIR}}
        run: |
          poetry install

      - name: Install project dependencies
        working-directory: ${{env.WORK_DIR}}
        run: |
          mkdir -p okp4_grpc_client
          poetry run python -m grpc_tools.protoc -I=../proto/cosmos-sdk -I=../proto/okp4 $(find ../proto -type f -name '*.proto' | tr '\n' ' ') --grpc_python_out=gen_python

      - name: Build project
        working-directory: ${{env.WORK_DIR}}
        run: |
          poetry build
