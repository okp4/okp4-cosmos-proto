name: Build

on:
  workflow_call:

  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-kotlin:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Configure gradle.properties
        run: |
          cat <<EOF >> kotlin/gradle.properties
          maven.credentials.username=${{ secrets.MAVEN_REPOSITORY_USERNAME }}
          maven.credentials.password=${{ secrets.MAVEN_REPOSITORY_PASSWORD }}
          EOF

      - name: Build kotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x check
          build-root-directory: kotlin

  build-typescript:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup node environment (for building)
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0

      - name: Fetch dependencies
        run: yarn --cwd ts

      - name: Generate sources
        run: yarn --cwd ts generate

      - name: Build
        run: yarn --cwd ts build

  build-rust:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true

      - name: Install cargo make
        uses: davidB/rust-cargo-make@v1

      - name: Build rust
        working-directory: ./rust
        run: cargo make build

  build-python:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - name: cosmos_sdk_grpc_client
            includes: "-I=../../proto/cosmos-sdk $(find ../../proto/cosmos-sdk -type f -name '*.proto' | tr '\n' ' ')"
          - name: okp4_grpc_client
            includes: "-I=../../proto/cosmos-sdk -I=../../proto/okp4 $(find ../../proto -type f -name '*.proto' | tr '\n' ' ')"
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: 1.1.11

      - name: Install project dependencies
        working-directory: ./python/${{ matrix.target.name }}
        run: |
          poetry install

      - name: Install project dependencies
        working-directory: ./python/${{ matrix.target.name }}
        run: |
          mkdir -p ${{ matrix.target.name }}
          poetry run python -m grpc_tools.protoc ${{ matrix.target.includes }} --grpc_python_out=${{ matrix.target.name }}

      - name: Build project
        working-directory: ./python/${{ matrix.target.name }}
        run: |
          poetry build
